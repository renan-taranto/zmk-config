/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        carret_tilde: carret_tilde {
            compatible = "zmk,behavior-mod-morph";
            label = "CARRET_TILDE";
            bindings = <&kp TILDE>, <&kp CARET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        apostrophe_grave: apostrophe_grave {
            compatible = "zmk,behavior-mod-morph";
            label = "APOSTROPHE_GRAVE";
            bindings = <&kp APOS>, <&kp GRAVE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        doublequote_exclamation: doublequote_exclamation {
            compatible = "zmk,behavior-mod-morph";
            label = "DOUBLEQUOTE_EXCLAMATION";
            bindings = <&kp EXCLAMATION>, <&kp DOUBLE_QUOTES>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Default Layer";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&lt 5 LGUI        &kp Q  &kp W  &kp E         &kp R        &kp T        &kp Y      &kp U                     &kp I         &kp O    &kp P      &doublequote_exclamation
&kp LEFT_CONTROL  &kp A  &kp S  &kp D         &kp F        &kp G        &kp H      &kp J                     &kp K         &kp L    &kp SEMI   &apostrophe_grave
&kp LEFT_ALT      &kp Z  &kp X  &kp C         &kp V        &kp B        &kp N      &kp M                     &kp COMMA     &kp DOT  &kp SLASH  &carret_tilde
                                &lt 2 ESCAPE  &lt 1 SPACE  &lt 3 TAB    &kp ENTER  &mt LEFT_SHIFT BACKSPACE  &lt 4 DELETE
            >;
        };

        navigation {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans     &kp LC(X)  &kp LC(C)  &kp LC(V)  &trans     &kp K_CONTEXT_MENU
&trans  &trans  &trans  &trans  &trans  &trans    &kp LC(Z)  &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &kp LS(LC(Z))
&trans  &trans  &trans  &trans  &trans  &trans    &trans     &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &trans
                        &trans  &trans  &trans    &kp LGUI   &trans     &trans
            >;
        };

        numerals {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans     &kp N7      &kp N8  &kp N9  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans     &kp N4      &kp N5  &kp N6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans     &kp N1      &kp N2  &kp N3  &trans  &trans
                        &trans  &trans  &trans    &kp COMMA  &kp PERIOD  &kp N0
            >;
        };

        function {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp F12  &kp F7  &kp F8  &kp F9  &trans  &kp PRINTSCREEN
&trans  &trans  &trans  &trans  &trans  &trans    &kp F11  &kp F4  &kp F5  &kp F6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp F10  &kp F1  &kp F2  &kp F3  &trans  &trans
                        &trans  &trans  &trans    &trans   &trans  &trans
            >;
        };

        symbols {
            bindings = <
&kp HASH      &kp AT_SIGN    &kp AMPERSAND   &kp DOLLAR   &kp LBKT              &kp RBKT                 &trans  &trans  &trans  &trans  &trans  &trans
&kp ASTERISK  &kp PLUS       &kp MINUS       &kp EQUAL    &kp LEFT_BRACE        &kp RIGHT_BRACE          &trans  &trans  &trans  &trans  &trans  &trans
&kp PIPE      &kp BACKSLASH  &kp UNDERSCORE  &kp PERCENT  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &trans  &trans  &trans  &trans  &trans  &trans
                                             &trans       &trans                &trans                   &trans  &trans  &trans
            >;
        };

        media {
            bindings = <
&none  &none  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &none    &none       &none  &none         &none         &none         &none
&none  &none  &none       &none         &none         &none    &none       &none  &none         &none         &none         &none
&none  &none  &none       &none         &none         &none    &bt BT_CLR  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
                          &none         &none         &none    &none       &none  &none
            >;
        };
    };
};
