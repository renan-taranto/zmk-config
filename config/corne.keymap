/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        carret_tilde: carret_tilde {
            compatible = "zmk,behavior-mod-morph";
            label = "CARRET_TILDE";
            bindings = <&kp TILDE>, <&kp CARET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        apostrophe_grave: apostrophe_grave {
            compatible = "zmk,behavior-mod-morph";
            label = "APOSTROPHE_GRAVE";
            bindings = <&kp APOS>, <&kp GRAVE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        doublequote_exclamation: doublequote_exclamation {
            compatible = "zmk,behavior-mod-morph";
            label = "DOUBLEQUOTE_EXCLAMATION";
            bindings = <&kp EXCLAMATION>, <&kp DOUBLE_QUOTES>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MOD_LEFT";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            // Lado esquerdo (F, D) entra em hold se J ou K forem pressionados
            hold-trigger-key-positions = <8 9>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MOD_RIGHT";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            // Lado direito (J, K) entra em hold se F ou D forem pressionados
            hold-trigger-key-positions = <3 4>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Default Layer";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&lt 5 ESCAPE    &kp Q  &kp W  &kp E           &kp R               &kp T        &kp Y      &kp U                     &kp I           &kp O    &kp P      &doublequote_exclamation
&kp LEFT_SHIFT  &kp A  &kp S  &mt LEFT_ALT D  &mt LEFT_CONTROL F  &kp G        &kp H      &mt LEFT_CONTROL J        &mt LEFT_ALT K  &kp L    &kp SEMI   &apostrophe_grave
&kp LEFT_GUI    &kp Z  &kp X  &kp C           &kp V               &kp B        &kp N      &kp M                     &kp COMMA       &kp DOT  &kp SLASH  &carret_tilde
                              &lt 2 ESCAPE    &lt 1 SPACE         &lt 3 TAB    &kp ENTER  &mt LEFT_SHIFT BACKSPACE  &lt 4 DELETE
            >;
        };

        navigation {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp LC(Z)  &kp LC(LS(Z))  &kp LC(C)  &kp LC(V)  &kp LC(X)  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans     &kp LEFT       &kp DOWN   &kp UP     &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans     &kp HOME       &kp PG_DN  &kp PG_UP  &kp END    &trans
                        &trans  &trans  &trans    &kp LGUI   &trans         &trans
            >;
        };

        numerals {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans     &kp N7      &kp N8  &kp N9  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans     &kp N4      &kp N5  &kp N6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans     &kp N1      &kp N2  &kp N3  &trans  &trans
                        &trans  &trans  &trans    &kp COMMA  &kp PERIOD  &kp N0
            >;
        };

        function {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp F12  &kp F7  &kp F8  &kp F9  &trans  &kp PRINTSCREEN
&trans  &trans  &trans  &trans  &trans  &trans    &kp F11  &kp F4  &kp F5  &kp F6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp F10  &kp F1  &kp F2  &kp F3  &trans  &trans
                        &trans  &trans  &trans    &trans   &trans  &trans
            >;
        };

        symbols {
            bindings = <
&kp HASH     &kp AT_SIGN    &kp AMPERSAND  &kp ASTERISK  &kp LBKT              &kp RBKT                 &trans  &trans  &trans  &trans  &trans  &trans
&kp PERCENT  &kp UNDER      &kp MINUS      &kp DOLLAR    &kp LEFT_BRACE        &kp RIGHT_BRACE          &trans  &trans  &trans  &trans  &trans  &trans
&kp PIPE     &kp BACKSLASH  &kp EQUAL      &kp PLUS      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &trans  &trans  &trans  &trans  &trans  &trans
                                           &trans        &trans                &trans                   &trans  &trans  &trans
            >;
        };

        media {
            bindings = <
&none  &none  &none  &none  &none  &none    &none       &none  &none         &none         &none         &none
&none  &none  &none  &none  &none  &none    &none       &none  &none         &none         &none         &none
&none  &none  &none  &none  &none  &none    &bt BT_CLR  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
                     &none  &none  &none    &none       &none  &none
            >;
        };
    };
};
