/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        carret_tilde: carret_tilde {
            compatible = "zmk,behavior-mod-morph";
            label = "CARRET_TILDE";
            bindings = <&kp TILDE>, <&kp CARET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        apostrophe_grave: apostrophe_grave {
            compatible = "zmk,behavior-mod-morph";
            label = "APOSTROPHE_GRAVE";
            bindings = <&kp APOS>, <&kp GRAVE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        singlequote_doublequote: singlequote_doublequote {
            compatible = "zmk,behavior-mod-morph";
            label = "SINGLEQUOTE_DOUBLEQUOTE";
            bindings = <&kp SINGLE_QUOTE>, <&kp DOUBLE_QUOTES>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Default Layer";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&lt 5 LEFT_GUI    &kp Q  &kp W  &kp E       &kp R        &kp T        &kp Y      &kp U                     &kp I       &kp O    &kp P          &singlequote_doublequote
&kp LEFT_ALT      &kp A  &kp S  &kp D       &lt 3 F      &kp G        &kp H      &lt 4 J                   &kp K       &kp L    &carret_tilde  &apostrophe_grave
&kp LEFT_CONTROL  &kp Z  &kp X  &mt C       &kp V        &kp B        &kp N      &kp M                     &kp COMMA   &kp DOT  &kp SEMI       &kp SLASH
                                &kp ESCAPE  &lt 1 SPACE  &lt 2 TAB    &kp ENTER  &mt LEFT_SHIFT BACKSPACE  &kp DELETE
            >;
        };

        navigation {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_AC_UNDO  &kp C_AC_CUT  &kp C_AC_COPY  &kp C_AC_PASTE  &kp C_AC_REDO  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans         &kp LEFT      &kp DOWN       &kp UP          &kp RIGHT      &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans         &kp HOME      &kp PG_DN      &kp PG_UP       &kp END        &trans
                        &trans  &trans  &trans    &trans         &trans        &trans
            >;
        };

        numerals {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N7  &kp N8  &kp N9  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N4  &kp N5  &kp N6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp N0  &kp N1  &kp N2  &kp N3  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        function {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp F12  &kp F7  &kp F8  &kp F9  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp F11  &kp F4  &kp F5  &kp F6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp F10  &kp F1  &kp F2  &kp F3  &trans  &trans
                        &trans  &trans  &trans    &trans   &trans  &trans
            >;
        };

        symbols {
            bindings = <
&trans  &kp EXCLAMATION  &kp AMPERSAND  &kp ASTERISK  &kp LBKT              &kp RBKT                 &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp PERCENT      &kp MINUS      &kp DOLLAR    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans           &kp AT         &kp HASH      &kp BACKSLASH         &kp EQUAL                &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans                &trans                   &trans  &trans  &trans
            >;
        };

        media {
            bindings = <
&none  &none  &none  &none  &none  &none    &none       &none  &none         &none         &none         &none
&none  &none  &none  &none  &none  &none    &none       &none  &none         &none         &none         &none
&none  &none  &none  &none  &none  &none    &bt BT_CLR  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
                     &none  &none  &none    &none       &none  &none
            >;
        };
    };
};
